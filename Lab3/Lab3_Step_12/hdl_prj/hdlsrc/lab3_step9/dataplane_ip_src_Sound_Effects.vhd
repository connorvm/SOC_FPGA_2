-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\lab3_step9\dataplane_ip_src_Sound_Effects.vhd
-- Created: 2020-05-07 10:46:00
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: dataplane_ip_src_Sound_Effects
-- Source Path: lab3_step9/dataplane/Avalon Data Processing/Left Channel Processing/Sound Effects
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.dataplane_ip_src_dataplane_pkg.ALL;

ENTITY dataplane_ip_src_Sound_Effects IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Data_In                           :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
        Gain                              :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
        Enable_out5                       :   IN    std_logic;
        Data_Out                          :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En28
        );
END dataplane_ip_src_Sound_Effects;


ARCHITECTURE rtl OF dataplane_ip_src_Sound_Effects IS

  ATTRIBUTE multstyle : string;

  -- Signals
  SIGNAL Data_In_signed                   : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Gain_signed                      : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Product_out1                     : signed(63 DOWNTO 0);  -- sfix64_En56
  SIGNAL enb_gated                        : std_logic;
  SIGNAL Delay_reg                        : vector_of_signed64(0 TO 2);  -- sfix64 [3]
  SIGNAL Delay_reg_next                   : vector_of_signed64(0 TO 2);  -- sfix64_En56 [3]
  SIGNAL Delay_out1                       : signed(63 DOWNTO 0);  -- sfix64_En56
  SIGNAL Gain1_out1                       : signed(127 DOWNTO 0);  -- sfix128_En119
  SIGNAL Add_add_cast                     : signed(127 DOWNTO 0);  -- sfix128_En119
  SIGNAL Add_out1                         : signed(127 DOWNTO 0);  -- sfix128_En119
  SIGNAL Data_Type_Conversion_out1        : signed(31 DOWNTO 0);  -- sfix32_En28

BEGIN
  Data_In_signed <= signed(Data_In);

  Gain_signed <= signed(Gain);

  Product_out1 <= Data_In_signed * Gain_signed;

  enb_gated <= Enable_out5 AND enb;

  Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_reg(0) <= to_signed(0, 64);
      Delay_reg(1) <= to_signed(0, 64);
      Delay_reg(2) <= to_signed(0, 64);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated = '1' THEN
        Delay_reg(0) <= Delay_reg_next(0);
        Delay_reg(1) <= Delay_reg_next(1);
        Delay_reg(2) <= Delay_reg_next(2);
      END IF;
    END IF;
  END PROCESS Delay_process;

  Delay_out1 <= Delay_reg(2);
  Delay_reg_next(0) <= Product_out1;
  Delay_reg_next(1) <= Delay_reg(0);
  Delay_reg_next(2) <= Delay_reg(1);

  Gain1_out1 <= resize(Delay_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 128);

  Add_add_cast <= resize(Product_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 128);
  Add_out1 <= Add_add_cast + Gain1_out1;

  Data_Type_Conversion_out1 <= Add_out1(122 DOWNTO 91);

  Data_Out <= std_logic_vector(Data_Type_Conversion_out1);

END rtl;

